# Unifor
**Disciplina** Raciocínio logico e Algorítimo
**Orientador** Prof. Ricardo Carubbi 

## Lista de exercícios
### Exercício 3
Represente o Fluxograma e o Pseudocódigo para avaliar se um número inteiro positivo é par ou impar.
#### Fluxograma
```mermaid
flowchart TD
A([INICIO]) --> B{{Digíte um numero}}
B --> C[/N1/]
C --> D{N1 > 0}
D --NÃO-->E{{o número informado é negativo}}
E-->Z([FIM])
D --SIM-->F[N1 mod 2 = Rest]
F --> G{Rest == 0}
G --NÃO--> H{{O numero informado é impar}}
G --SIM--> I{{O numero informado é par}}
I --> Z
H --> Z

```
#### Pseudocódigo
```
ALGORÍTIMO par_ou_impar
DECLARE N1, Rest NUMÉRICO
ESCREVA "Digite um número"
LEIA N1
SE N1 > 0
    Rest <-- N1 mod 2
    SE Rest == 0
        ESCREVA "O número informado é par"
    SENÃO 
        ESCREVA "O número informado é impar"
    FIM_ALGORÍTIMO
SENÃO 
    ESCREVA "O número informado é negativo"
    FIM_ALGORÍTIMO    
```
### Exercício 20
Receba dois números reais e um operador (vide slide 9). e efetue a operação
correspondente com os valores recebidos (operandos). O algoritmo deve retornar o
resultado da operação selecionada simulando todas as opeações de uma calculadora
simples.
#### FLUXOGRAMA (mermaid flowchart)
```mermaid
flowchart TD
A([START]) --> B{{Intruções da calculadora: 1 = adição, 2 = subtração, 3 = multiplição, 4 = divisão, 5 = divisão inteira, 6 = resto da divisão, 7 = exponenciação/radicação}}
B-->C{{Digite o primeiro número da expressão}}
C-->D[/N1/]
D-->E{{Digite o operando com base nas intruções}}
E-->F[/Op/]
F-->G{Op >= 1 and Op <= 7}
G--FALSE-->H{{O número do operando precisa ser maior que um e menor que sete}}
H-->B
G--TRUE-->I{{Digite o segundo número da expressão}}
I-->J[/N2/]
J-->K{Op = 1}
K--FALSE-->L{Op = 2}
K--TRUE-->k(N1 + N2 == Rs)
k-->R
L--FALSE-->M{Op = 3}
L--TRUE-->l(N1 - N2 == Rs)
l-->R
M--FALSE-->N{Op = 4}
M--TRUE-->m(N1 * N2 == Rs)
m-->R
N--FALSE-->O{Op = 5}
N--TRUE-->n{N2 = 0}
n--FALSE-->n2(N1 / N2 == Rs)
n--TRUE-->n3{{ERROR: Impossívem dividir por zero}}
n2-->R
n3-->B
O--FALSE-->P{Op = 6}
O--TRUE-->o(N1 // N2 == Rs)
o-->R
P--FALSE-->q
P--TRUE-->p(N1 % N2 == Rs)
p-->R
q(N1 ** N2 == Rs)
q-->R{{O seu resultado foi Rs}}
R-->Z([END])
```
#### Pseudocódigo
```
1 Algoritimo Calculadora
2 Declare N1,
          N2,
          Rs: float
          Op: int
3 INICIO
4 ESCREVA "Intruções da calculadora: 1 = adição, 2 = subtração, 3 = multiplição, 4              
           = divisão, 5 = divisão inteira, 6 = resto da divisão, 7 = exponenciação/radicação" 
5 ESCREVA "Digite o primeiro número da expressão"
6 LEIA N1
7 ESCREVA "Digite o operando com base nas intruções"
8 LEIA Op
9 SE Op >= 1 e Op <= 7
10     ESCREVA "Digite o segundo número da expressão"
11     LEIA N2
12     ESCOLHA
13         CASO Op =  1
14             N1 + N2 == Rs
15         CASO Op =  2
16             N1 - N2 == Rs
17         CASO Op = 3
18             N1 * N2 == Rs
19         CASO Op = 4
20             SE N2 = 0
21                ESCREVA "ERROR: Impossível dividir por zero"
22                   VOLTE PARA 4								// é assim? 
23		 	   SENÃO
24                N1 / N2 == RS
25             FIM_SE   
26         CASO Op = 5
27             N1 // N2 == Rs
28         CASO Op = 6
29             N1 % N2 == Rs
30         SENÃO
31             N1 ** N2 == Rs  
32		   FIM_ESCOLHA 
33 ESCREVA "O seu resultado foi", Rs    
34 FIM_ALGORÍTIMO
```





 
